syntax = "proto3";
import "common.proto";
import "server.proto";
option go_package = "/message";

// 进入房间
message GalacticKittensEnterRoomRequest{
}
//进入房间
message GalacticKittensEnterRoomResponse{
  MessageResult result = 1; //错误信息
}

// 退出房间
message GalacticKittensQuitRoomRequest{
}
//退出房间
message GalacticKittensQuitRoomResponse{
  MessageResult result = 1; //错误信息
}

//推送房间信息
message GalacticKittensRoomInfoResponse{
  GalacticKittensRoomInfo room = 1; //房间信息
}

//房间信息
message GalacticKittensRoomInfo{
  uint32 id = 1; //房间ID
  repeated GalacticKittensPlayerInfo player = 2;
  uint32 state = 3; //房间状态 0匹配；1准备；2加载；3游戏中；4完成；5结束
}

//玩家信息
message GalacticKittensPlayerInfo{
  int64 playerId = 1; //玩家id
  string nick = 2; //昵称
  bool prepare = 3; //是否准备
  int32 score = 4; //分数
  int32 powerUpCount = 5; //充能数
  int32 hp = 6; //血量
  string icon = 7; //头像
  int32 characterId = 8; //角色索引id 0开始
}

//选择角色
message GalacticKittenSelectCharacterRequest{
  int32 characterId = 1; //角色索引id 0开始
}

//选择角色
message GalacticKittenSelectCharacterResponse{
  MessageResult result = 1; //错误信息
}

//准备
message GalacticKittensPrepareRequest {
  bool prepare = 1; //ture准备，false取消
}
//准备
message GalacticKittensPrepareResponse {
  MessageResult result = 1; //错误信息
}

// 玩家服务器信息列表 内部
message GalacticKittensPlayerServerListRequest {
  uint32 roomId = 1; //房间id
}
//玩家服务器信息列表 内部
message GalacticKittensPlayerServerListResponse {
  MessageResult result = 1; //错误信息
  map<int64, ServerInfo> playerGateServers = 2; //玩家网关服务器信息
  map<int64, ServerInfo> playerLobbyServers = 3; //玩家大厅服务器信息
  uint32 roomId= 4; //房间id
  map<int64,PlayerInfo> playerInfos= 5; //玩家信息

  message PlayerInfo{
    int32 CharacterId= 1; //选择的角色ID
  }
}

//游戏完成 内部
message GalacticKittensGameFinishRequest {
  uint32 roomId = 1; //房间id
}
//游戏完成 内部
message GalacticKittensGameFinishResponse {
  MessageResult result = 1; //错误信息
  GalacticKittensRoomInfo room = 2; //房间信息
}




//游戏对象产出
message GalacticKittensObjectSpawnResponse{
  repeated SpawnInfo spawn =1 ;//出生信息

  //出生信息
  message SpawnInfo{
    int64 ownerId = 1; //拥有者Id
    int64 id= 2; //对象唯一id
    uint32 configId= 3; //配置id 0-3玩家飞船；20Boss；30玩家子弹，31敌人子弹；40射击敌人、41幽灵敌人、41陨石
    Vector3D position =4; //出生位置
    Vector3D linearVelocity = 5; //线速度
    Vector3D scale =6; //缩放
    float syncInterval= 7; //同步间隔，服务器告知，用于两边同步
  }

}

//游戏对象死亡
message GalacticKittensObjectDieResponse{
  int64 ownerId = 1; //拥有者Id
  int64 killerId = 2; //击杀者
  int64 id= 3; //对象唯一id
}

//开火请求 ,只有玩家控制的对象请求，子弹服务器生成推送
message GalacticKittensFireRequest{

}
//开火请求 ,只有玩家控制的对象请求，子弹服务器生成推送
message GalacticKittensFireResponse{
  MessageResult result = 1; //错误信息
}

//使用护盾
message GalacticKittensUseShieldRequest{

}
//使用护盾
message GalacticKittensUseShieldResponse{
  MessageResult result = 1; //错误信息
}

//飞船护盾状态
message GalacticKittensShipShieldStateResponse{
  int64 shipId = 1; //使用护盾的飞船ID
  uint32 state = 2; //0无，1有
}

//飞船移动状态同步
message GalacticKittensShipMoveStateRequest{
  uint32 state =1 ; //0初始化，1向上，2向下
}
//飞船移动状态同步
message GalacticKittensShipMoveStateResponse{
  MessageResult result = 1; //错误信息
  int64 shipId = 2; //飞船ID
  uint32 state =3 ; //0初始化，1向上，2向下
}

//GalacticKittens Match 服务
service GalacticKittensMatchService{
  //玩家服务器列表
  rpc playerServerList(GalacticKittensPlayerServerListRequest) returns (GalacticKittensPlayerServerListResponse);
  // 游戏完成
  rpc gameFinish(GalacticKittensGameFinishRequest) returns (GalacticKittensGameFinishResponse);
}





