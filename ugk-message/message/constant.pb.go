// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.18.1
// source: constant.proto

package message

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 消息ID右移20位switch 0 1 2 4 8判断转发给那个服务器（0截取本地、1lobby、2功能微服务，3游戏微服务）
// 消息ID奇数客户端请求，偶数服务器返回
// 功能模块100个消息，游戏模块1000个消息
type MID int32

const (
	MID_None     MID = 0       //网关拦截消息
	MID_HeartReq MID = 1000001 //心跳
	MID_HeartRes MID = 1000002 //心跳
	MID_LoginReq MID = 1000003 //登录
	MID_LoginRes MID = 1000004 //登录
)

// Enum value maps for MID.
var (
	MID_name = map[int32]string{
		0:       "None",
		1000001: "HeartReq",
		1000002: "HeartRes",
		1000003: "LoginReq",
		1000004: "LoginRes",
	}
	MID_value = map[string]int32{
		"None":     0,
		"HeartReq": 1000001,
		"HeartRes": 1000002,
		"LoginReq": 1000003,
		"LoginRes": 1000004,
	}
)

func (x MID) Enum() *MID {
	p := new(MID)
	*p = x
	return p
}

func (x MID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MID) Descriptor() protoreflect.EnumDescriptor {
	return file_constant_proto_enumTypes[0].Descriptor()
}

func (MID) Type() protoreflect.EnumType {
	return &file_constant_proto_enumTypes[0]
}

func (x MID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MID.Descriptor instead.
func (MID) EnumDescriptor() ([]byte, []int) {
	return file_constant_proto_rawDescGZIP(), []int{0}
}

var File_constant_proto protoreflect.FileDescriptor

var file_constant_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2a, 0x4f, 0x0a, 0x03, 0x4d, 0x49, 0x44, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x6f, 0x6e, 0x65, 0x10,
	0x00, 0x12, 0x0e, 0x0a, 0x08, 0x48, 0x65, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x10, 0xc1, 0x84,
	0x3d, 0x12, 0x0e, 0x0a, 0x08, 0x48, 0x65, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x10, 0xc2, 0x84,
	0x3d, 0x12, 0x0e, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x10, 0xc3, 0x84,
	0x3d, 0x12, 0x0e, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x10, 0xc4, 0x84,
	0x3d, 0x42, 0x0a, 0x5a, 0x08, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_constant_proto_rawDescOnce sync.Once
	file_constant_proto_rawDescData = file_constant_proto_rawDesc
)

func file_constant_proto_rawDescGZIP() []byte {
	file_constant_proto_rawDescOnce.Do(func() {
		file_constant_proto_rawDescData = protoimpl.X.CompressGZIP(file_constant_proto_rawDescData)
	})
	return file_constant_proto_rawDescData
}

var file_constant_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_constant_proto_goTypes = []interface{}{
	(MID)(0), // 0: MID
}
var file_constant_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_constant_proto_init() }
func file_constant_proto_init() {
	if File_constant_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_constant_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_constant_proto_goTypes,
		DependencyIndexes: file_constant_proto_depIdxs,
		EnumInfos:         file_constant_proto_enumTypes,
	}.Build()
	File_constant_proto = out.File
	file_constant_proto_rawDesc = nil
	file_constant_proto_goTypes = nil
	file_constant_proto_depIdxs = nil
}
