<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Net.Http.WinHttpHandler</name>
    </assembly>
    <members>
        <member name="M:Interop.Kernel32.GetMessage(System.Int32)">
            <summary>
                Returns a string message for the specified Win32 error code.
            </summary>
        </member>
        <member name="M:System.Net.HttpKnownHeaderNames.TryGetHeaderName(System.Char[],System.Int32,System.Int32,System.String@)">
            <summary>
            Gets a known header name string from a matching char[] array segment, using a case-sensitive
            ordinal comparison. Used to avoid allocating new strings for known header names.
            </summary>
        </member>
        <member name="M:System.Net.HttpKnownHeaderNames.TryGetHeaderName(System.IntPtr,System.Int32,System.String@)">
            <summary>
            Gets a known header name string from a matching IntPtr buffer, using a case-sensitive
            ordinal comparison. Used to avoid allocating new strings for known header names.
            </summary>
        </member>
        <member name="M:System.Net.HttpKnownHeaderNames.TryMatch``1(System.String,``0,System.Int32,System.Int32,System.Func{System.String,``0,System.Int32,System.Int32,System.Boolean},System.String@)">
            <summary>
            Returns true if <paramref name="known"/> matches the <paramref name="key"/> char[] array segment,
            using an ordinal comparison.
            </summary>
        </member>
        <member name="T:System.Net.Http.HttpHandlerDefaults">
            <summary>
            Central repository for default values used in http handler settings.  Not all settings are relevant
            to or configurable by all handlers.
            </summary>
        </member>
        <member name="T:System.Net.Http.NoWriteNoSeekStreamContent">
            <summary>Provides an HttpContent for a Stream that is inherently read-only without support for writing or seeking.</summary>
            <remarks>Same as StreamContent, but specialized for no-write, no-seek, and without being constrained by its public API.</remarks>
        </member>
        <member name="P:System.Net.Http.WinHttpHandler.TcpKeepAliveEnabled">
            <summary>
            Gets or sets a value indicating whether TCP keep-alive is enabled.
            </summary>
            <remarks>
            Only supported on Windows 10 version 2004 or newer.
            If enabled, the values of <see cref="P:System.Net.Http.WinHttpHandler.TcpKeepAliveInterval" /> and <see cref="P:System.Net.Http.WinHttpHandler.TcpKeepAliveTime"/> will be forwarded
            to set WINHTTP_OPTION_TCP_KEEPALIVE, enabling and configuring TCP keep-alive for the backing TCP socket.
            </remarks>
        </member>
        <member name="P:System.Net.Http.WinHttpHandler.TcpKeepAliveTime">
            <summary>
            Gets or sets the TCP keep-alive timeout.
            </summary>
            <remarks>
            Only supported on Windows 10 version 2004 or newer.
            Has no effect if <see cref="P:System.Net.Http.WinHttpHandler.TcpKeepAliveEnabled"/> is <see langword="false" />.
            The default value of this property is 2 hours.
            </remarks>
        </member>
        <member name="P:System.Net.Http.WinHttpHandler.TcpKeepAliveInterval">
            <summary>
            Gets or sets the TCP keep-alive interval.
            </summary>
            <remarks>
            Only supported on Windows 10 version 2004 or newer.
            Has no effect if <see cref="P:System.Net.Http.WinHttpHandler.TcpKeepAliveEnabled"/> is <see langword="false" />.
            The default value of this property is 1 second.
            </remarks>
        </member>
        <member name="T:System.Net.Http.WinHttpRequestCallback">
            <summary>
            Static class containing the WinHttp global callback and associated routines.
            </summary>
        </member>
        <member name="T:System.Net.Http.WinHttpResponseHeaderReader">
            <summary>
            Used to read header lines of an HTTP response, where each line is separated by "\r\n".
            </summary>
        </member>
        <member name="M:System.Net.Http.WinHttpResponseHeaderReader.ReadHeader(System.String@,System.String@)">
            <summary>
            Reads a header line.
            Empty header lines are skipped, as are malformed header lines that are missing a colon character.
            </summary>
            <returns>true if the next header was read successfully, or false if all characters have been read.</returns>
        </member>
        <member name="M:System.Net.Http.WinHttpResponseHeaderReader.ReadLine">
            <summary>
            Reads lines separated by "\r\n".
            </summary>
            <returns>true if the next line was read successfully, or false if all characters have been read.</returns>
        </member>
        <member name="M:System.Net.Http.WinHttpResponseHeaderReader.ReadLine(System.Int32@,System.Int32@)">
            <summary>
            Reads lines separated by "\r\n".
            </summary>
            <param name="startIndex">The start of the line segment.</param>
            <param name="length">The length of the line segment.</param>
            <returns>true if the next line was read successfully, or false if all characters have been read.</returns>
        </member>
        <member name="M:System.Net.Http.WinHttpResponseParser.GetResponseHeaderNumberInfo(Interop.WinHttp.SafeWinHttpHandle,System.UInt32)">
            <summary>
            Returns the first header or throws if the header isn't found.
            </summary>
        </member>
        <member name="M:System.Net.Http.WinHttpResponseParser.GetResponseHeader(Interop.WinHttp.SafeWinHttpHandle,System.UInt32,System.Char[])">
            <summary>
            Fills the buffer with the header value and returns the length, or returns 0 if the header isn't found.
            </summary>
        </member>
        <member name="M:System.Net.Http.WinHttpResponseParser.GetResponseHeaderCharBufferLength(Interop.WinHttp.SafeWinHttpHandle,System.Boolean)">
            <summary>
            Returns the size of the char array buffer.
            </summary>
        </member>
        <member name="T:System.Net.NetEventSource">
            <summary>Provides logging facilities for System.Net libraries.</summary>
        </member>
        <member name="F:System.Net.NetEventSource.Log">
            <summary>The single event source instance to use for all logging.</summary>
        </member>
        <member name="M:System.Net.NetEventSource.Info(System.Object,System.FormattableString,System.String)">
            <summary>Logs an information message.</summary>
            <param name="thisOrContextObject">`this`, or another object that serves to provide context for the operation.</param>
            <param name="formattableString">The message to be logged.</param>
            <param name="memberName">The calling member.</param>
        </member>
        <member name="M:System.Net.NetEventSource.Info(System.Object,System.Object,System.String)">
            <summary>Logs an information message.</summary>
            <param name="thisOrContextObject">`this`, or another object that serves to provide context for the operation.</param>
            <param name="message">The message to be logged.</param>
            <param name="memberName">The calling member.</param>
        </member>
        <member name="M:System.Net.NetEventSource.Error(System.Object,System.FormattableString,System.String)">
            <summary>Logs an error message.</summary>
            <param name="thisOrContextObject">`this`, or another object that serves to provide context for the operation.</param>
            <param name="formattableString">The message to be logged.</param>
            <param name="memberName">The calling member.</param>
        </member>
        <member name="M:System.Net.NetEventSource.Error(System.Object,System.Object,System.String)">
            <summary>Logs an error message.</summary>
            <param name="thisOrContextObject">`this`, or another object that serves to provide context for the operation.</param>
            <param name="message">The message to be logged.</param>
            <param name="memberName">The calling member.</param>
        </member>
        <member name="M:System.Runtime.ExceptionServices.ExceptionStackTrace.AddCurrentStack(System.Exception)">
            <summary>In debug builds, appends the current stack trace to the exception.</summary>
        </member>
        <member name="T:System.Threading.Tasks.RendezvousAwaitable`1">
            <summary>Provides a reusable object that can be awaited by a consumer and manually completed by a producer.</summary>
            <typeparam name="TResult">The type of data being passed from producer to consumer.</typeparam>
        </member>
        <member name="F:System.Threading.Tasks.RendezvousAwaitable`1.s_completionSentinel">
            <summary>Sentinel object indicating that the operation has completed prior to OnCompleted being called.</summary>
        </member>
        <member name="F:System.Threading.Tasks.RendezvousAwaitable`1._continuation">
            <summary>
            The continuation to invoke when the operation completes, or <see cref="F:System.Threading.Tasks.RendezvousAwaitable`1.s_completionSentinel"/> if the operation
            has completed before OnCompleted is called.
            </summary>
        </member>
        <member name="F:System.Threading.Tasks.RendezvousAwaitable`1._error">
            <summary>The exception representing the failed async operation, if it failed.</summary>
        </member>
        <member name="F:System.Threading.Tasks.RendezvousAwaitable`1._result">
            <summary>The result of the async operation, if it succeeded.</summary>
        </member>
        <member name="P:System.Threading.Tasks.RendezvousAwaitable`1.RunContinuationsAsynchronously">
            <summary>true if the producer should invoke the continuation asynchronously; otherwise, false.</summary>
        </member>
        <member name="M:System.Threading.Tasks.RendezvousAwaitable`1.GetAwaiter">
            <summary>Gets this instance as an awaiter.</summary>
        </member>
        <member name="P:System.Threading.Tasks.RendezvousAwaitable`1.IsCompleted">
            <summary>Whether the operation has already completed.</summary>
        </member>
        <member name="M:System.Threading.Tasks.RendezvousAwaitable`1.SetResult(`0)">
            <summary>Set the result of the operation.</summary>
        </member>
        <member name="M:System.Threading.Tasks.RendezvousAwaitable`1.SetCanceled(System.Threading.CancellationToken)">
            <summary>Set that the operation was canceled.</summary>
        </member>
        <member name="M:System.Threading.Tasks.RendezvousAwaitable`1.SetException(System.Exception)">
            <summary>Set the failure for the operation.</summary>
        </member>
        <member name="M:System.Threading.Tasks.RendezvousAwaitable`1.NotifyAwaiter">
            <summary>Alerts any awaiter that the operation has completed.</summary>
        </member>
        <member name="M:System.Threading.Tasks.RendezvousAwaitable`1.OnCompleted(System.Action)">
            <summary>Register the continuation to invoke when the operation completes.</summary>
        </member>
        <member name="M:System.Threading.Tasks.RendezvousAwaitable`1.UnsafeOnCompleted(System.Action)">
            <summary>Register the continuation to invoke when the operation completes.</summary>
        </member>
        <member name="T:System.IO.StreamHelpers">
            <summary>Provides methods to help in the implementation of Stream-derived types.</summary>
        </member>
        <member name="M:System.IO.StreamHelpers.ValidateCopyToArgs(System.IO.Stream,System.IO.Stream,System.Int32)">
            <summary>Validate the arguments to CopyTo, as would Stream.CopyTo.</summary>
        </member>
        <member name="P:System.SR.net_securityprotocolnotsupported">
            <summary>The requested security protocol is not supported.</summary>
        </member>
        <member name="P:System.SR.net_http_invalid_cookiecontainer">
            <summary>When using CookieUsePolicy.UseSpecifiedCookieContainer, the CookieContainer property must not be null.</summary>
        </member>
        <member name="P:System.SR.net_http_invalid_proxyusepolicy">
            <summary>When using a non-null Proxy, the WindowsProxyUsePolicy property must be set to WindowsProxyUsePolicy.UseCustomProxy.</summary>
        </member>
        <member name="P:System.SR.net_http_invalid_proxy">
            <summary>When using WindowsProxyUsePolicy.UseCustomProxy, the Proxy property must not be null.</summary>
        </member>
        <member name="P:System.SR.net_http_handler_norequest">
            <summary>A request message must be provided. It cannot be null.</summary>
        </member>
        <member name="P:System.SR.net_http_operation_started">
            <summary>This instance has already started one or more requests. Properties can only be modified before sending the first request.</summary>
        </member>
        <member name="P:System.SR.net_http_client_execution_error">
            <summary>An error occurred while sending the request.</summary>
        </member>
        <member name="P:System.SR.net_http_io_read">
            <summary>The read operation failed, see inner exception.</summary>
        </member>
        <member name="P:System.SR.net_http_io_read_incomplete">
            <summary>Unable to read data from the transport connection. The connection was closed before all data could be read. Expected {0} bytes, read {1} bytes.</summary>
        </member>
        <member name="P:System.SR.net_http_io_write">
            <summary>The write operation failed, see inner exception.</summary>
        </member>
        <member name="P:System.SR.net_http_chunked_not_allowed_with_empty_content">
            <summary>'Transfer-Encoding: chunked' header can not be used when content object is not specified.</summary>
        </member>
        <member name="P:System.SR.net_http_invalid_enable_first">
            <summary>The {0} property must be set to '{1}' to use this property.</summary>
        </member>
        <member name="P:System.SR.net_http_value_must_be_greater_than">
            <summary>The specified value must be greater than {0}.</summary>
        </member>
        <member name="P:System.SR.net_http_username_empty_string">
            <summary>The username for a credential object cannot be null or empty.</summary>
        </member>
        <member name="P:System.SR.net_http_no_concurrent_io_allowed">
            <summary>The stream does not support concurrent I/O read or write operations.</summary>
        </member>
        <member name="P:System.SR.net_http_buffer_insufficient_length">
            <summary>The buffer was not long enough.</summary>
        </member>
        <member name="P:System.SR.ArgumentOutOfRange_NeedPosNum">
            <summary>Positive number required.</summary>
        </member>
        <member name="P:System.SR.NotSupported_UnreadableStream">
            <summary>Stream does not support reading.</summary>
        </member>
        <member name="P:System.SR.NotSupported_UnwritableStream">
            <summary>Stream does not support writing.</summary>
        </member>
        <member name="P:System.SR.ObjectDisposed_StreamClosed">
            <summary>Cannot access a closed stream.</summary>
        </member>
        <member name="P:System.SR.net_http_content_stream_already_read">
            <summary>The stream was already consumed. It cannot be read again.</summary>
        </member>
        <member name="P:System.SR.net_http_winhttp_error">
            <summary>Error {0} calling {1}, '{2}'.</summary>
        </member>
        <member name="P:System.SR.PlatformNotSupported_WinHttpHandler">
            <summary>WinHttpHandler is only supported on .NET Framework and .NET runtimes on Windows. It is not supported for Windows Store Applications (UWP) or Unix platforms.</summary>
        </member>
        <member name="P:System.SR.net_http_unsupported_requesturi_scheme">
            <summary>The '{0}' scheme is not supported.</summary>
        </member>
        <member name="P:System.SR.net_http_client_invalid_requesturi">
            <summary>An invalid request URI was provided. Either the request URI must be an absolute URI or BaseAddress must be set.</summary>
        </member>
    </members>
</doc>
